{"version":3,"sources":["Components/MovieTabs.jsx","Components/MovieItem.jsx","Components/MoviePage.jsx","Components/App.jsx","utils.js","index.js"],"names":["MovieTabs","this","props","sort_by","updateSortBy","handleClick","value","getClass","className","role","onClick","React","Component","MovieItem","toggleOverview","setState","show","state","handleLike","like","handleWillWatch","willWatch","movie","original_title","vote_average","adult","overview","release_date","id","backdrop_path","poster_path","src","alt","toString","style","display","justifyContent","type","removeMovie","changeMovieWillWatch","MoviePage","page","total_pages","updatePage","changePage","App","getMovies","fetch","then","response","json","result","movies","results","filter","item","title","updateMovies","Set","moviesWillWatch","values","has","delete","add","prevProps","prevState","map","size","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.4bd05926.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default class MovieTabs extends React.Component {\r\n  render() {\r\n    const { sort_by, updateSortBy } = this.props;\r\n\r\n    const handleClick = (value) => () => updateSortBy(value);\r\n\r\n    const getClass = (value) => `nav-link ${sort_by === value ? \"active\" : \"\"}`;\r\n\r\n    return (\r\n      <ul className=\"nav nav-tabs nav-pills\">\r\n        <li className=\"nav-item\">\r\n          <div\r\n            className={getClass(\"popularity.desc\")}\r\n            role=\"button\"\r\n            onClick={handleClick(\"popularity.desc\")}\r\n          >\r\n            Popularity\r\n          </div>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <div\r\n            className={getClass(\"revenue.desc\")}\r\n            role=\"button\"\r\n            onClick={handleClick(\"revenue.desc\")}\r\n          >\r\n            Revenue\r\n          </div>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <div\r\n            className={getClass(\"vote_average.desc\")}\r\n            role=\"button\"\r\n            onClick={handleClick(\"vote_average.desc\")}\r\n          >\r\n            Vote average\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class MovieItem extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      show: false,\r\n      like: false,\r\n      willWatch: false,\r\n    };\r\n  }\r\n\r\n  toggleOverview = () => {\r\n    this.setState({ show: !this.state.show });\r\n  };\r\n\r\n  handleLike = () => {\r\n    this.setState({ like: !this.state.like });\r\n  };\r\n\r\n  handleWillWatch = () => {\r\n    this.setState({ willWatch: !this.state.willWatch });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      original_title,\r\n      vote_average,\r\n      adult,\r\n      overview,\r\n      release_date,\r\n      id,\r\n      backdrop_path,\r\n      poster_path,\r\n    } = this.props.movie;\r\n    return (\r\n      <div className=\"card\">\r\n        <img\r\n          className=\"card-img-top\"\r\n          src={`https://image.tmdb.org/t/p/w500${backdrop_path || poster_path}`}\r\n          alt=\"\"\r\n        />\r\n        <div className=\"card-body\">\r\n          <p className=\"card-title\">{original_title}</p>\r\n          {this.state.show ? (\r\n            <div>\r\n              <p>Vote:{vote_average}</p>\r\n              <p>Adult:{adult.toString()}</p>\r\n              <p>Overview:{overview}</p>\r\n              <p>Release:{release_date}</p>\r\n            </div>\r\n          ) : null}\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={this.toggleOverview}\r\n            >\r\n              {this.state.show ? \"Hide\" : \"Show\"}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.handleLike}\r\n              className={this.state.like ? \"btn btn-danger\" : \"btn btn-primary\"}\r\n            >\r\n              Like\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => this.props.removeMovie(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className={\r\n                this.state.willWatch ? \"btn btn-success\" : \"btn btn-primary\"\r\n              }\r\n              onClick={() => {\r\n                this.handleWillWatch();\r\n                this.props.changeMovieWillWatch(original_title);\r\n              }}\r\n            >\r\n              Will watch\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default class MoviePage extends React.Component {\r\n  render() {\r\n    const { page, total_pages, updatePage } = this.props;\r\n    const changePage = (value) => () => updatePage(value);\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {page > 1 ? (\r\n            <button onClick={changePage(page - 1)} className=\"col\">\r\n              {page - 1}\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"col text-center\">{page}</div>\r\n          {page < total_pages ? (\r\n            <button onClick={changePage(page + 1)} className=\"col\">\r\n              {page + 1}\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"col text-center\">{total_pages}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"../styles.css\";\nimport MovieTabs from \"./MovieTabs\";\nimport MovieItem from \"./MovieItem\";\nimport MoviePage from \"./MoviePage\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { API_KEY_3, API_URL } from \"../utils\";\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      moviesWillWatch: new Set(),\n      sort_by: \"popularity.desc\",\n      page: 1,\n      total_pages: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.sort_by !== prevState.sort_by) {\n      this.getMovies();\n    } else if (this.state.page !== prevState.page) {\n      this.getMovies();\n    }\n  }\n\n  getMovies = () => {\n    fetch(\n      `${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sort_by}&page=${this.state.page}`\n    )\n      .then((response) => response.json())\n      .then((result) =>\n        this.setState({\n          movies: result.results,\n          page: result.page,\n          total_pages: result.total_pages,\n        })\n      );\n  };\n\n  updateSortBy = (value) => {\n    this.setState({ sort_by: value });\n  };\n\n  updatePage = (value) => {\n    this.setState({ page: value });\n  };\n\n  removeMovie = (id) => {\n    this.setState({\n      movies: this.state.movies.filter((item) => item.id !== id),\n    });\n  };\n\n  changeMovieWillWatch = (title) => {\n    const updateMovies = new Set(this.state.moviesWillWatch.values());\n    if (!updateMovies.has(title)) {\n      updateMovies.add(title);\n      this.setState({\n        moviesWillWatch: updateMovies,\n      });\n    } else {\n      updateMovies.delete(title);\n      this.setState({\n        moviesWillWatch: updateMovies,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"row mb-4\">\n              <div className=\"col-12\">\n                <MovieTabs\n                  sort_by={this.state.sort_by}\n                  updateSortBy={this.updateSortBy}\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              {this.state.movies.map((movie) => (\n                <div className=\"col mb-4\" key={movie.id}>\n                  <MovieItem\n                    movie={movie}\n                    removeMovie={this.removeMovie}\n                    changeMovieWillWatch={this.changeMovieWillWatch}\n                  />\n                </div>\n              ))}\n            </div>\n            <div className=\"row mb-4\">\n              <div className=\"col-12\">\n                <MoviePage\n                  total_pages={this.state.total_pages}\n                  page={this.state.page}\n                  updatePage={this.updatePage}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-3\">\n            <p>Will watch: {this.state.moviesWillWatch.size}</p>\n            {[...this.state.moviesWillWatch].map((title) => (\n              <p key={title}>{title}</p>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export const API_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";\r\n\r\nexport const API_KEY_4 =\r\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZjRjYTRmM2E5NzUwZGE1MzQ1MDY0NmNlZDMxMjM5NyIsInN1YiI6IjVhYzlmNWRkOTI1MTQxNjJhZTA1Njk0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fc4f9DVB6pFWh6hIjYe0NCC4pImdmNzDIfi_3Nb3tC4\";\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./Components/App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}